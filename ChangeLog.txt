2009-02-19  Tao Wang  <dancefire@gmail.com>

	* cpp/include/openclas/common.hpp: Remove unordered_map
	* cpp/include/openclas/dictionary.hpp: Replace unordered_map with std::map
	* cpp/include/openclas/serialization.hpp: Fix bug about global variable locale_{gbk,utf8}
	* cpp/include/openclas/utility.hpp: Remove a test code.
	* cpp/src/unit_test/unit_test.cpp: remove all uncomments.
	* cpp/src/unit_test/unit_test_dictionary.hpp:
	* cpp/src/unit_test/unit_test_serialization.hpp: Add empty testcases.

2009-02-18  Tao Wang  <dancefire@gmail.com>

	* include/openclas/common.hpp: Add define NOMINMAX for MSVC
	* include/openclas/k_shortest_path.hpp:
		Add undef min. 
		Remove const of Graph arguments.
		Add empty graph process.
	* src/unit_test/unit_test_k_shortest_path.hpp: Complete the testcases for k_shortest_path.hpp.

2009-02-17  Tao Wang  <dancefire@gmail.com>

	* cpp/include/openclas/k_shortest_path.hpp:
		change path_type::nodelist to std::vector.
		change dag_all_paths() arguments.
		add code to handle empty graph.
		fix a bug, didn't add up the edge during the traverse.
		using property_map<>::const_type.
	* cpp/include/openclas/utility.hpp: Replace normal pointer with scoped_ptr<T>.
	* cpp/include/openclas/viterbi.hpp: new lines Unix=>Windows
	* cpp/src/unit_test/unit_test.cpp: Uncommented test for viterbi and k_shortest_path
	* cpp/src/unit_test/unit_test_k_shortest_path.hpp: Implemented part of the k_shortest_path testcases.
	* cpp/src/unit_test/unit_test_viterbi.hpp: Add testcases for viterbi algorithm.

2009-02-16  Tao Wang  <dancefire@gmail.com>

	* cpp/include/openclas/utf8_codecvt_facet.hpp: Merge utf8_codecvt_facet.hpp and utf8_codecvt_facet.cpp,
	so make the program become header only.

2009-02-15  Tao Wang  <dancefire@gmail.com>

	* cpp/include/openclas/common.hpp: Fix inconsistance new line(Unix->Windows)
	* cpp/include/openclas/segment.hpp:
	* cpp/include/openclas/utility.hpp:
		Replace WIN32 with _MSC_VER for detection of Visual C++	compiler. 
		Using utf8_codecvt_facet for UTF-8 encoding under Visual C++ compiler.
		under Visual C++. 
		Rename CodePage* to Charset*.
		Remove UCS[2,4]_[BE|LE] support. Keep UTF-8 only.
		Rename code_converter_type to codecvt_t to make it shorter.
		Add make_locale(enum Charset charset) to generate locale by given charset.
	* Add cpp/include/openclas/utf8_codecvt_facet.hpp: Copy utf8_codecvt_facet.hpp from Boost
		to this project for generating std::locale obj for UTF-8 charset under Visual C++, which
		does not support UTF-8 facet in original STL.
	* cpp/src/unit_test/unit_test_utility.hpp: using make_locale(), and add cases for encoding.
	* cpp/src/unit_test/OpenClas_VS2005.vcproj: Minor changes.
	* cpp/script/bom.py: Minor changes for usage().
	* Add cpp/script/chd.cpp: Used for generate "\xab\x23..." like string.

2009-02-15  Tao Wang  <dancefire@gmail.com>

	Appended UTF-8 BOM as prefix for all source code, so that it can be compiled under windows.
	Anyone want to compile the project under Linux, need to run 'bom.py' at the cpp/ directory.

2009-02-15  Tao Wang  <dancefire@gmail.com>

	* cpp/include/openclas/utility.hpp:
	* cpp/src/unit_test/unit_test_utility.hpp: Remove utf7 support since will never use it.
	* Add cpp/script/bom.py: to remove/append UTF-8 BOM leading. It need to be removed before
	compiling under g++, and need to be appended before commit the result to svn repository.

2009-02-15  Tao Wang  <dancefire@gmail.com>

	* Rename cpp/include/openclas/*.h to *.hpp.

2009-02-15  Tao Wang  <dancefire@gmail.com>
ï»¿
	* Move cpp/src/* to cpp/src/unit_test/*.

2009-02-15  Tao Wang  <dancefire@gmail.com>

	* cpp/include/openclas/segment.h: Add workaround code to undef VC max(a,b) macro.
	And add global namespace for log() to avoid make it confuse with boost::unit_test::log
	* cpp/include/openclas/utility.h: Make WORD_TAG_NAME to all little-case
	And add static to NUMBER_PREFIXS.
	* cpp/src/OpenClas_VS2005.vcproj:
	* cpp/src/OpenClas_VS2008.vcproj: 
	* cpp/src/test.cpp:
	* cpp/src/unit_test_dictionary.hpp:
	* cpp/src/unit_test_k_shortest_path.hpp:
	* cpp/src/unit_test_segment.hpp:
	* cpp/src/unit_test_serialization.hpp:
	* cpp/src/unit_test_utility.hpp:
	* cpp/src/unit_test_viterbi.hpp: Using Boost.Test do the regression test.
	Added test cases for utility.

2009-02-13  Tao Wang  <dancefire@gmail.com>

	* include/openclas/segment.h:
	* include/openclas/serialization.h:
	* include/openclas/utility.h:
	Put pku::* to namespace openclas and remove namespace pku. Since 
	pku is spreaded many places, it may not be introduce another tag system.
	Remove class ValueCheck, use the function version instead.
	Rename within() to in_range()
	Rename is_inside() to exist(), and make the function works for 
	zero-terminated	string.
	Add doxygen style comments for each function. (just for try).

2009-02-13  Tao Wang  <dancefire@gmail.com>

	* include/openclas/common.h:
	* include/openclas/dictionary.h:
	* include/openclas/segment.h:
	* include/openclas/serialization.h:
	* include/openclas/utility.h: Remove typedef char_type and string_type, 
	use the original type instead.
